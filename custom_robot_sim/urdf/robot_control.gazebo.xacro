<?xml version="1.0"?>
<robot>
    <!--Add gazebo specific definitions here-->
    <gazebo reference="arm_base_joint">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="link_1_joint">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="link_2_joint">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="link_3_joint">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="gripper_base_joint">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="gripper_finger_left_joint">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="gripper_finger_right_joint">
        <implicitSpringDamper>true</implicitSpringDamper>
    </gazebo>
    <gazebo reference="front_left_wheel_link">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>500000.0</kp>
        <kd>10.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>0.1</maxVel>
        <fdir1>1 0 0</fdir1>
        <!-- <material>Gazebo/FlatBlack</material> -->
    </gazebo>
    <gazebo reference="front_right_wheel_link">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>500000.0</kp>
        <kd>10.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>0.1</maxVel>
        <fdir1>1 0 0</fdir1>
        <!-- <material>Gazebo/FlatBlack</material> -->
    </gazebo>
    <gazebo reference="back_left_wheel_link">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>500000.0</kp>
        <kd>10.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>0.1</maxVel>
        <fdir1>1 0 0</fdir1>
        <!-- <material>Gazebo/FlatBlack</material> -->
    </gazebo>
    <gazebo reference="back_right_wheel_link">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>500000.0</kp>
        <kd>10.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>0.1</maxVel>
        <fdir1>1 0 0</fdir1>
        <!-- <material>Gazebo/FlatBlack</material> -->
    </gazebo>



    <!--CAMERA RIGHT-->
    <gazebo reference="camera_rgb_frame">
        <sensor name="camera" type="camera">
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>30</update_rate>
            <camera name="picam">
            <horizontal_fov>1.085595</horizontal_fov>
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
            </image>
            <clip>
                <near>0.03</near>
                <far>100</far>
            </clip>
            <noise>
                <type>gaussian</type>
                <!-- Noise is sampled independently per pixel on each frame.
                    That pixel's noise value is added to each of its color
                    channels, which at that point lie in the range [0,1]. -->
                <mean>0.0</mean>
                <stddev>0.007</stddev>
            </noise>
            </camera>
            <plugin name="camera_driver" filename="libgazebo_ros_camera.so">
                <ros>
                <!-- <namespace>test_cam</namespace> -->
                <!-- <remapping>image_raw:=image_demo</remapping> -->
                <!-- <remapping>camera_info:=camera_info_demo</remapping> -->
                </ros>
                <!-- camera_name>omit so it defaults to sensor name</camera_name-->
                <!-- frame_name>omit so it defaults to link name</frameName-->
                <!-- <hack_baseline>0.07</hack_baseline> -->
            </plugin>
        </sensor>
    </gazebo>
    <!--CAMERA RIGHT-->


    <!--CAMERA LEFT-->
    <gazebo reference="camera_rgb_frame1">
        <sensor name="camera" type="camera">
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>30</update_rate>
            <camera name="picam">
            <horizontal_fov>1.085595</horizontal_fov>
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
            </image>
            <clip>
                <near>0.03</near>
                <far>100</far>
            </clip>
            <noise>
                <type>gaussian</type>
                <!-- Noise is sampled independently per pixel on each frame.
                    That pixel's noise value is added to each of its color
                    channels, which at that point lie in the range [0,1]. -->
                <mean>0.0</mean>
                <stddev>0.007</stddev>
            </noise>
            </camera>
            <plugin name="camera_driver" filename="libgazebo_ros_camera.so">
                <ros>
                <!-- <namespace>test_cam</namespace> -->
                <!-- <remapping>image_raw:=image_demo</remapping> -->
                <!-- <remapping>camera_info:=camera_info_demo</remapping> -->
                </ros>
                <!-- camera_name>omit so it defaults to sensor name</camera_name-->
                <!-- frame_name>omit so it defaults to link name</frameName-->
                <!-- <hack_baseline>0.07</hack_baseline> -->
            </plugin>
        </sensor>
    </gazebo>
    <!--CAMERA LEFT-->



    <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
            <robot_sim_type>gazebo_ros2_control/GazeboSystem</robot_sim_type>
            <parameters>$(find custom_robot_sim)/config/controller_conf.yaml</parameters>
        </plugin>
    </gazebo>

    <ros2_control name="GazeboSystem" type="system">
        <hardware>
            <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>

        <!--Add joint command/state interface definitions-->
        <joint name="arm_base_joint">
            <command_interface name="position">
                <param name="min">-${pi/2}</param>
                <param name="max">${pi/2}</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
            <!-- <state_interface name="effort"/> -->
        </joint>
        <joint name="link_1_joint">
            <command_interface name="position">
                <param name="min">-${pi/2}</param>
                <param name="max">${pi/2}</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
            <!-- <state_interface name="effort"/> -->
        </joint>
        <joint name="link_2_joint">
            <command_interface name="position">
                <param name="min">-${pi/2}</param>
                <param name="max">${pi/2}</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
            <!-- <state_interface name="effort"/> -->
        </joint>
        <joint name="link_3_joint">
            <command_interface name="position">
                <param name="min">-${pi/2}</param>
                <param name="max">${pi/2}</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
            <!-- <state_interface name="effort"/> -->
        </joint>

        <joint name="gripper_base_joint">
            <command_interface name="position">
                <param name="min">-${pi/2}</param>
                <param name="max">${pi/2}</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
            <state_interface name="effort"/>
        </joint>


        <joint name="gripper_finger_left_joint">
            <command_interface name="position"/>
            <state_interface name="position"/>
            <!-- <state_interface name="velocity"/> -->
            <command_interface name="effort"/>
        </joint>

        <joint name="gripper_finger_right_joint">
            <param name="mimic">gripper_finger_left_joint</param>
            <param name="multiplier">1</param>
            <command_interface name="position"/>
            <state_interface name="position"/>
            <!-- <state_interface name="velocity"/> -->
            <command_interface name="effort"/>
        </joint>
        
        

    </ros2_control>

    <gazebo>
        <plugin name="mobile_base_controller" filename="libgazebo_ros_diff_drive.so">
            <ros>
                <!-- <namespace>/demo</namespace>

                <remapping>cmd_vel:=cmd_demo</remapping>
                <remapping>odom:=odom_demo</remapping> -->
            </ros>

            <update_rate>100</update_rate>

            <!--1 for differential drive; 2 for skid steer drive-->
            <num_wheel_pairs>2</num_wheel_pairs>

            <left_joint>front_left_wheel_joint</left_joint>
            <right_joint>front_right_wheel_joint</right_joint>

            <left_joint>back_left_wheel_joint</left_joint>
            <right_joint>back_right_wheel_joint</right_joint>

            <wheel_separation>0.51</wheel_separation>
            <wheel_separation>0.51</wheel_separation>

            <wheel_diameter>0.2</wheel_diameter>
            <wheel_diameter>0.2</wheel_diameter>

            <max_wheel_torque>50</max_wheel_torque>
            <max_wheel_acceleration>1.0</max_wheel_acceleration>

            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>false</publish_wheel_tf>

            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>mobile_base_link</robot_base_frame>
        </plugin>
    </gazebo>




</robot>